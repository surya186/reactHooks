[{"/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/index.js":"1","/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/App.js":"2","/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/reportWebVitals.js":"3","/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/Calc/Calculator.js":"4","/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/Use-Reducer/Use-R.js":"5","/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/Use-Reducer/Use-R-complex.js":"6","/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/Use-Effect/Use-Effect.js":"7","/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/UseMemo/UseMemo.js":"8","/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/UseRef/UseRef.js":"9","/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/UseContext/UseContextDemo.js":"10","/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/UseContext/ThemeContextCode.js":"11"},{"size":547,"mtime":1610256079230,"results":"12","hashOfConfig":"13"},{"size":2314,"mtime":1610353197741,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610171252488,"results":"15","hashOfConfig":"13"},{"size":2976,"mtime":1610348135694,"results":"16","hashOfConfig":"13"},{"size":1075,"mtime":1610260870507,"results":"17","hashOfConfig":"13"},{"size":2583,"mtime":1610274265672,"results":"18","hashOfConfig":"13"},{"size":3226,"mtime":1610287925480,"results":"19","hashOfConfig":"13"},{"size":2710,"mtime":1610339449775,"results":"20","hashOfConfig":"13"},{"size":1624,"mtime":1610347916647,"results":"21","hashOfConfig":"13"},{"size":491,"mtime":1610353063387,"results":"22","hashOfConfig":"13"},{"size":1708,"mtime":1610354201596,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q8tns1",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/index.js",[],"/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/App.js",["48"],"/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/reportWebVitals.js",[],["49","50"],"/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/Calc/Calculator.js",[],"/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/Use-Reducer/Use-R.js",[],"/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/Use-Reducer/Use-R-complex.js",[],"/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/Use-Effect/Use-Effect.js",["51","52","53"],"import React, { useState, useEffect } from \"react\";\n\nexport default function UseEffectExplore() {\n  const [effectVar, setEffectVar] = useState(\"useEffect\");\n  const [stateVar, setstateVar] = useState(\"State\");\n  const [counter, setcounter] = useState(1);\n  const [effectcounter, setEffectcounter] = useState(1);\n  const [checkboxState, setCheckboxState] = useState(false);\n\n\n  const handleStateButton = () => {\n    setcounter((prevCount) => prevCount + 1);\n    setstateVar(\"State Changed\" + \" \" + counter);\n    handleEffectButton();\n  };\n\n  const handleCheckBox = () => {\n    setCheckboxState((prevCheckbox) => !prevCheckbox);\n    setEffectVar(\"useEffect\")\n    setstateVar(\"State\")\n    setEffectcounter(1)\n    setcounter(1)\n  };\n\n  const handleEffectButton = () => {\n    if (!checkboxState) {\n      setEffectcounter((prevCount) => prevCount + 1);\n      setEffectVar(\"useEffect Called\" + \" \" + effectcounter);\n    } else {\n      return setEffectVar(\"useEffect Called 1\");\n    }\n  };\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\" style={{ display: \"block\" }}>\n        <label className=\"checkbox-inline\">\n          <input type=\"checkbox\" value=\"\" onClick={handleCheckBox} />\n          <span> </span>\n          Use Effect Depedency Array Enable\n        </label>\n      </div>\n      <p style={{ textAlign: \"left\" }}>\n        <b>\n          useEffect Hook called at every reder/ re-render. If we only want to\n          run the useEffect hook only on specific variable state change then we\n          must specify those variables in the dependecy array. Ex: useEffect is\n          really cool when querying endpoints. In the initial query, we\n          obviously need response. Later, if we are able to query the response\n          with different paramters then its not needed to hit the API again.\n          <br />\n          **** We have return function in useEffect Hook which can be used to\n          remove the listeners which we created previously to save app memory.\n          <br />\n          ***** If we place a eventlistener in the useEffect which is called even\n          without calling the useEffect.\n        </b>\n        <br />\n        <br />\n\n        <div className=\"row\" style={{ textAlign: \"left\" }}>\n          <b> Note: </b> It is just to demonstrate how useEffect works with and\n          without the Depedency Array. If the above checkbox is seleted that\n          means the useEffect called only when the values specified in the\n          dependency array Updated. Otherwise useEffect won't run. Without\n          dependency array useEffect hook called end of every render/ re-render.\n          Checkbox True is considered as empty dependency array []. So, After\n          state change useEffect won't change.\n        </div>\n      </p>\n      <div className=\"row\">\n        <div className=\"col-md-4\"></div>\n        <div className=\"col-md-4\">\n          <button className=\"btn btn-primary\" onClick={handleStateButton}>\n            {stateVar}\n          </button>\n          <span> </span>\n          <button className=\"btn btn-primary\" onClick={handleEffectButton}>\n            {effectVar}\n          </button>\n        </div>\n        <div className=\"col-md-4\"></div>\n      </div>\n    </div>\n  );\n}\n","/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/UseMemo/UseMemo.js",[],"/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/UseRef/UseRef.js",[],"/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/UseContext/UseContextDemo.js",[],"/Users/surya/Desktop/coding/reactJs-calculator/react-calculators/src/UseContext/ThemeContextCode.js",[],{"ruleId":"54","severity":1,"message":"55","line":8,"column":8,"nodeType":"56","messageId":"57","endLine":8,"endColumn":22},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"54","severity":1,"message":"62","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"64","line":13,"column":33,"nodeType":"65","messageId":"66","endLine":13,"endColumn":34},{"ruleId":"63","severity":1,"message":"64","line":28,"column":39,"nodeType":"65","messageId":"66","endLine":28,"endColumn":40},"no-unused-vars","'UseContextDemo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'useEffect' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]